{"version":3,"sources":["Rectangle.js"],"names":["Rectangle","x","y","w","h","point","rectangle","Area","module","exports"],"mappings":";;;;;;;;;;AAAA;;;IAGMA,S;AACJ;;;;;;;;;AASA,qBAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqBC,CAArB,EAAwB;AAAA;;AACtB,SAAKH,CAAL,GAAQA,CAAR;AACA,SAAKC,CAAL,GAAQA,CAAR;AACA,SAAKC,CAAL,GAAQA,CAAR;AACA,SAAKC,CAAL,GAAQA,CAAR;AACD;AACD;;;;;;;;;;kCAMcC,K,EAAO;AACnB,aAAOA,MAAMJ,CAAN,IAAW,KAAKA,CAAhB,IACAI,MAAMJ,CAAN,IAAW,KAAKA,CAAL,GAAS,KAAKE,CADzB,IAEAE,MAAMH,CAAN,IAAW,KAAKA,CAFhB,IAGAG,MAAMH,CAAN,IAAW,KAAKA,CAAL,GAAS,KAAKE,CAHhC;AAID;AACD;;;;;;;;;sCAMkBE,S,EAAW;AAC3B,aAAO,EAAEA,UAAUL,CAAV,GAAc,KAAKA,CAAL,GAAS,KAAKE,CAA5B,IACDG,UAAUJ,CAAV,GAAc,KAAKA,CAAL,GAAS,KAAKE,CAD3B,IAEDE,UAAUL,CAAV,GAAcK,UAAUH,CAAxB,GAA4B,KAAKF,CAFhC,IAGDK,UAAUJ,CAAV,GAAcI,UAAUF,CAAxB,GAA4B,KAAKF,CAHlC,CAAP;AAID;;;;;AAEH;;;;;;;IAKMK,I;;;AACJ;;;;;;;AAOA,gBAAYN,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqBC,CAArB,EAAwB;AAAA;;AACtBH,QAAIA,IAAIE,IAAI,CAAZ;AACAD,QAAIA,IAAIE,IAAI,CAAZ;AAFsB,uGAGhBH,CAHgB,EAGbC,CAHa,EAGVC,CAHU,EAGPC,CAHO;AAIvB;;;EAZgBJ,S;;AAcnBQ,OAAOC,OAAP,GAAiBT,SAAjB,EAA4BO,IAA5B","file":"Rectangle.js","sourcesContent":["/**\n * Class describing a rectangle\n */\nclass Rectangle {\n  /**\n   * New Rectangle with x & y\n   * coordinates and a\n   * width and height.\n   * @param {float} x\n   * @param {float} y\n   * @param {float} w\n   * @param {float} h\n   */\n  constructor(x, y, w, h) {\n    this.x= x;\n    this.y= y;\n    this.w= w;\n    this.h= h;\n  }\n  /**\n   * Checks if a point sits in\n   * the area of the rectangle\n   * @param {Point} point\n   * @return {boolean}\n   */\n  containsPoint(point) {\n    return point.x >= this.x &&\n           point.x <= this.x + this.w &&\n           point.y >= this.y &&\n           point.y <= this.y + this.h;\n  }\n  /**\n   * Check if a rectangle's area\n   * overlaps this rectangle\n   * @param {Rectangle} rectangle\n   * @return {boolean}\n   */\n  overlapsRectangle(rectangle) {\n    return !(rectangle.x > this.x + this.w ||\n            rectangle.y > this.y + this.h ||\n            rectangle.x + rectangle.w < this.x ||\n            rectangle.y + rectangle.h < this.y);\n  }\n}\n/**\n * Class describing an area\n * given a centre point and a\n * width and height from that point\n */\nclass Area extends Rectangle {\n  /**\n  *\n  * @param {float} x\n  * @param {float} y\n  * @param {float} w\n  * @param {float} h\n  */\n  constructor(x, y, w, h) {\n    x = x - w / 2;\n    y = y - h / 2;\n    super(x, y, w, h);\n  }\n}\nmodule.exports = Rectangle, Area;\n"]}