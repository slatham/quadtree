{"version":3,"sources":["../src/Rectangle.js"],"names":["rectangle","Object","assign","_x","_y","_w","_h","x","value","y","w","h","containsPoint","point","overlapsRectangle","module","exports"],"mappings":";;AAAA,IAAMA,YAAY,SAAZA,SAAY,GAAM;;AAExB,WAAOC,OAAOC,MAAP,CAAc;AACjBC,YAAI,CADa;AAEjBC,YAAI,CAFa;AAGjBC,YAAI,CAHa;AAIjBC,YAAI,CAJa;AAKjB,YAAIC,CAAJ,CAAMC,KAAN,EAAY;AACR,iBAAKL,EAAL,GAAUK,KAAV;AACH,SAPgB;AAQjB,YAAID,CAAJ,GAAO;AACH,mBAAO,KAAKJ,EAAZ;AACH,SAVgB;AAWjB,YAAIM,CAAJ,CAAMD,KAAN,EAAa;AACT,iBAAKJ,EAAL,GAAUI,KAAV;AACH,SAbgB;AAcjB,YAAIC,CAAJ,GAAO;AACH,mBAAO,KAAKL,EAAZ;AACH,SAhBgB;AAiBjB,YAAIM,CAAJ,CAAMF,KAAN,EAAY;AACR,iBAAKH,EAAL,GAAUG,KAAV;AACH,SAnBgB;AAoBjB,YAAIE,CAAJ,GAAQ;AACJ,mBAAO,KAAKL,EAAZ;AACH,SAtBgB;AAuBjB,YAAIM,CAAJ,CAAMH,KAAN,EAAY;AACR,iBAAKF,EAAL,GAAUE,KAAV;AACH,SAzBgB;AA0BjB,YAAIG,CAAJ,GAAQ;AACJ,mBAAO,KAAKL,EAAZ;AACH,SA5BgB;AA6BjB;AACAM,qBA9BiB,yBA8BHC,KA9BG,EA8BI;AACjB,mBAAQA,MAAMN,CAAN,IAAW,KAAKA,CAAhB,IAAiC;AACjCM,kBAAMN,CAAN,IAAW,KAAKA,CAAL,GAAS,KAAKG,CADzB,IACiC;AACjCG,kBAAMJ,CAAN,IAAW,KAAKA,CAFhB,IAEiC;AACjCI,kBAAMJ,CAAN,IAAW,KAAKA,CAAL,GAAS,KAAKE,CAHjC,CADiB,CAIwB;AAC5C,SAnCgB;AAoCjBG,yBApCiB,6BAoCCd,SApCD,EAoCY;AACzB,mBAAQ,EAAEA,UAAUO,CAAV,GAAc,KAAKA,CAAL,GAAS,KAAKG,CAA5B,IAAwC;AAC1CV,sBAAUS,CAAV,GAAc,KAAKA,CAAL,GAAS,KAAKE,CAD1B,IACsC;AACxCX,sBAAUO,CAAV,GAAcP,UAAUU,CAAxB,GAA4B,KAAKH,CAF/B,IAEsC;AACxCP,sBAAUS,CAAV,GAAcT,UAAUW,CAAxB,GAA4B,KAAKF,CAHjC,CAAR,CADyB,CAIwB;AACpD;AAzCgB,KAAd,CAAP;AA2CC,CA7CD;AA8CAM,OAAOC,OAAP,GAAiBhB,SAAjB","file":"Rectangle.js","sourcesContent":["const rectangle = () => {\n\nreturn Object.assign({\n    _x: 0,\n    _y: 0,\n    _w: 0,\n    _h: 0,\n    set x(value){\n        this._x = value;\n    },\n    get x(){\n        return this._x;\n    },\n    set y(value) {\n        this._y = value;\n    },\n    get y(){\n        return this._y;\n    },\n    set w(value){\n        this._w = value;\n    },\n    get w() {\n        return this._w;\n    },\n    set h(value){\n        this._h = value;\n    },\n    get h() {\n        return this._h;\n    },\n    // function to check if a point is contained within the rectangle\n    containsPoint(point) {\n        return  point.x >= this.x &&             // evaluate the left edge of the rectangle\n                point.x <= this.x + this.w &&    // evaluate the right edge of the rectangle\n                point.y >= this.y &&             // evaluate the bottom edge of the rectangle\n                point.y <= this.y + this.h       // evaluate the top edge of the rectangle    \n    },\n    overlapsRectangle(rectangle) {\n        return  !(rectangle.x > this.x + this.w ||        // rectangle sits to the outside right\n                rectangle.y > this.y + this.h ||        // rectangle sits above\n                rectangle.x + rectangle.w < this.x ||   // rectangle sits to the outside left\n                rectangle.y + rectangle.h < this.y)      // rectangle sits below\n    }\n});\n}\nmodule.exports = rectangle;"]}